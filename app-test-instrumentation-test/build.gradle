apply plugin: "com.android.application"

apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"

apply plugin: "realm-android"

def versionMajor = "0"
def versionMinor = "1"
def versionMiniMinor = "xyz"

static def computeVersionName(major, minor, miniminor) {
    return  major + "."  + minor + "."  + miniminor
}

android {

    compileSdkVersion 30
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.solutiance.dach"
        minSdkVersion 24 // 24 = Android 7.0 (August 2016)
        targetSdkVersion 30 // 30 = Android 11 (September 2020)
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        versionCode 1
        versionName = computeVersionName(versionMajor, versionMinor, versionMiniMinor)

        archivesBaseName = "Dach-$versionName"
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            testCoverageEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            buildConfigField "boolean", "TEST_ACTIVE", "false"
            versionNameSuffix "-d"
        }

        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled false

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources false

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            testCoverageEnabled false

            buildConfigField "boolean", "TEST_ACTIVE", "false"
        }
    }

    dexOptions {
        jumboMode true
    }

    flavorDimensions "api"

    productFlavors {
        production {
            dimension "api"
            applicationIdSuffix ""
        }

        develop {
            dimension "api"
            applicationIdSuffix ".develop"
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation "androidx.vectordrawable:vectordrawable:1.1.0"
    implementation "androidx.constraintlayout:constraintlayout:2.0.4"

    //**********************************************************************************************
    // CRASH REPORT, TESTING, LEAK DETECTION
    //**********************************************************************************************
    testImplementation 'junit:junit:4.13.1'

    androidTestImplementation "androidx.test:core:1.3.0"
    androidTestImplementation "androidx.test:runner:1.3.0"
    androidTestImplementation "androidx.test:rules:1.3.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:2.2.0"
}